# Default values for workflow-builder
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: workflow-builder
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: workflow.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: workflow-tls
  #    hosts:
  #      - workflow.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Backend configuration
backend:
  replicaCount: 2
  image:
    repository: workflow-backend
    tag: latest
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8000
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  
  env:
    DATABASE_URL: "postgresql://workflow_user:workflow_password@postgres-service:5432/workflow_db"
    CHROMA_HOST: "chromadb-service"
    CHROMA_PORT: "8001"
    REDIS_URL: "redis://redis-service:6379"

# Frontend configuration
frontend:
  replicaCount: 2
  image:
    repository: workflow-frontend
    tag: latest
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 3000
  
  resources:
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  
  env:
    REACT_APP_API_URL: "http://backend-service:8000"

# ChromaDB configuration
chromadb:
  enabled: true
  replicaCount: 1
  image:
    repository: chromadb/chroma
    tag: latest
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8001
  
  persistence:
    enabled: true
    size: 5Gi
    storageClass: ""
  
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "workflow_password"
    username: "workflow_user"
    password: "workflow_password"
    database: "workflow_db"
  
  primary:
    persistence:
      enabled: true
      size: 10Gi
      storageClass: ""
    
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: false
  
  master:
    persistence:
      enabled: true
      size: 2Gi
      storageClass: ""
    
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

# Secrets configuration
secrets:
  apiSecretKey: "your-api-secret-key"
  jwtSecret: "your-jwt-secret"

# ConfigMap configuration
configMap:
  databaseUrl: "postgresql://workflow_user:workflow_password@postgres-service:5432/workflow_db"
  chromaHost: "chromadb-service"
  chromaPort: "8001"
  redisUrl: "redis://redis-service:6379"
  reactAppApiUrl: "http://backend-service:8000"